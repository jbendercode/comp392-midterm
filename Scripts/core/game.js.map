{"version":3,"sources":["core/game.ts"],"names":[],"mappings":"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","file":"core/game.js","sourcesContent":["/// <reference path=\"_reference.ts\"/>\n\n// Josh Bender - 300746563\n// Last Updated 02/03/2016\n// Comp392 MidTerm\n\n// MAIN GAME FILE\n\n// THREEJS Aliases\nimport Scene = THREE.Scene;\nimport Renderer = THREE.WebGLRenderer;\nimport PerspectiveCamera = THREE.PerspectiveCamera;\nimport BoxGeometry = THREE.BoxGeometry;\nimport CubeGeometry = THREE.CubeGeometry;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport SphereGeometry = THREE.SphereGeometry;\nimport Geometry = THREE.Geometry;\nimport AxisHelper = THREE.AxisHelper;\nimport LambertMaterial = THREE.MeshLambertMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Material = THREE.Material;\nimport Mesh = THREE.Mesh;\nimport Object3D = THREE.Object3D;\nimport SpotLight = THREE.SpotLight;\nimport PointLight = THREE.PointLight;\nimport AmbientLight = THREE.AmbientLight;\nimport Control = objects.Control;\nimport GUI = dat.GUI;\nimport Color = THREE.Color;\nimport Vector3 = THREE.Vector3;\nimport Face3 = THREE.Face3;\nimport Point = objects.Point;\nimport CScreen = config.Screen;\nimport ImageUtils = THREE.ImageUtils;\n\n//Custom Game Objects\nimport gameObject = objects.gameObject;\n\n// setup an IIFE structure (Immediately Invoked Function Expression)\nvar game = (() => {\n\n    // declare game objects\n    var scene: Scene = new Scene();\n    var renderer: Renderer;\n    var camera: PerspectiveCamera;\n    var control: Control;\n    var gui: GUI;\n    var stats: Stats;\n    var tower: Object3D;\n    var spotLight: SpotLight;\n    var ambientLight: AmbientLight;\n    var plane: Mesh;\n    var towerObjects: Mesh[];\n    var cubeGeometry: CubeGeometry;\n    var cubeMaterial: LambertMaterial;\n    var axes: AxisHelper;\n    var sphereMaterial: LambertMaterial;\n    var sphereGeometry: SphereGeometry;\n    var sphere: Mesh;\n\n    function init() {\n        // Instantiate a new Scene object\n        //scene = new Scene();\n        \n        setupRenderer(); // setup the default renderer\n\t\n        setupCamera(); // setup the camera\n\n        towerObjects = []; // Initialize the array to hold the towerObjects\n        \n        // add an axis helper to the scene\n        axes = new AxisHelper(15);\n        scene.add(axes);\n        console.log(\"Added Axis Helper to scene...\"); \n        \n        //Add a Plane to the Scene\n        plane = new gameObject(\n            new PlaneGeometry(24, 24, 1, 1),\n            new LambertMaterial({ map: ImageUtils.loadTexture(\"../../Assets/darkStoneTexture.jpg\") }),\n            0, 0, 0);\n            plane.castShadow = true;\n            plane.receiveShadow = true;\n    \n        plane.rotation.x = -0.5 * Math.PI;\n    \n        scene.add(plane);\n        console.log(\"Added Plane Primitive to scene...\");\n        \n        // Start with creating an empty group for tower\n        tower = new Object3D();\n        tower.position.set(0, 0, 0);\n        scene.add(tower);\n        console.log(\"Added tower to scene...\");\n        \n        // Set Mat and Geometry to use for cubes\n        cubeMaterial = new LambertMaterial({ map: ImageUtils.loadTexture(\"../../Assets/towerTexture.jpg\") });\n        cubeGeometry = new CubeGeometry(3, 2, 3);\n        \n        //Add Cubes to the tower\n        for (var i = 0; i < 5; i++){\n            towerObjects[i] = new Mesh(cubeGeometry, cubeMaterial);\n            towerObjects[i].castShadow = true;\n            towerObjects[i].receiveShadow = true;\n            towerObjects[i].position.x = 0;\n            towerObjects[i].position.y = 1 + i * 2;\n            towerObjects[i].position.z = 0;\n            tower.add(towerObjects[i]);\n            cubeGeometry = new CubeGeometry(3 - (1 + i) * 0.3, 2, 3 - (1 + i) * 0.3);\n        }\n        \n        // Set Mat and Geo for sphere\n        sphereMaterial = new LambertMaterial({ map: ImageUtils.loadTexture(\"../../Assets/metalTexture.jpg\") });\n        sphereGeometry = new SphereGeometry(0.5);\n        \n        \n        // Add a sphere to the top of the tower\n        sphere = new Mesh(sphereGeometry, sphereMaterial);\n        sphere.castShadow = false;\n        sphere.receiveShadow = true;\n        sphere.position.x = 0;\n        sphere.position.y = 10.5;\n        sphere.position.z = 0;\n        towerObjects[5] = sphere;\n        tower.add(sphere);\n        \n        // Add an AmbientLight to the scene\n        ambientLight = new AmbientLight(0x949494);\n        scene.add(ambientLight);\n        console.log(\"Added an Ambient Light to Scene\");\n    \t\n        // Add a SpotLight to the scene\n        spotLight = new SpotLight(0xFFFFFF);\n        spotLight.position.set(5.6, 23, 10.4);\n        spotLight.rotation.set(-0.8, 42.7, 19.5);\n        spotLight.castShadow = true;\n        spotLight.shadowCameraFar = 1000;\n        spotLight.shadowCameraNear = 0.1;\n        spotLight.intensity = 2;\n        scene.add(spotLight);\n        console.log(\"Added a SpotLight Light to Scene\");\n        \n        // add controls\n        gui = new GUI();\n        control = new Control(0, 0, 0, 0, 0, 1);\n        addControl(control);\n\n        // Add framerate stats\n        addStatsObject();\n        console.log(\"Added Stats to scene...\");\n\n        window.addEventListener('resize', onResize, false);\n        \n        document.body.appendChild(renderer.domElement);\n        gameLoop(); // render the scene\t\n\n    }\n\n    function addControl(controlObject: Control): void {\n        gui.add(controlObject, 'cube1Speed', -0.2, 0.2);\n        gui.add(controlObject, 'cube2Speed', -0.2, 0.2);\n        gui.add(controlObject, 'cube3Speed', -0.2, 0.2);\n        gui.add(controlObject, 'cube4Speed', -0.2, 0.2);\n        gui.add(controlObject, 'cube5Speed', -0.2, 0.2);\n        gui.add(controlObject, 'towerScale', 0, 1);\n    }\n\n    function addStatsObject() {\n        stats = new Stats();\n        stats.setMode(0);\n        stats.domElement.style.position = 'absolute';\n        stats.domElement.style.left = '0px';\n        stats.domElement.style.top = '0px';\n        document.body.appendChild(stats.domElement);\n    }\n\n    // Setup main game loop\n    function gameLoop(): void {\n        stats.update();\n        \n        // rotate tower Cubes\n        towerObjects[0].rotation.y += control.cube5Speed;\n        towerObjects[1].rotation.y += control.cube4Speed;\n        towerObjects[2].rotation.y += control.cube3Speed;\n        towerObjects[3].rotation.y += control.cube2Speed;\n        towerObjects[4].rotation.y += control.cube1Speed;\n        \n        // Scale Tower\n        for (var m in towerObjects){\n            towerObjects[m].scale.x = control.towerScale;\n            towerObjects[m].scale.y = control.towerScale;\n            towerObjects[m].scale.z = control.towerScale;\n        }\n        \n        // render using requestAnimationFrame\n        requestAnimationFrame(gameLoop);\n\t\n        // render the scene\n        renderer.render(scene, camera);\n    }\n\n    // Setup default renderer\n    function setupRenderer(): void {\n        renderer = new Renderer();\n        renderer.setClearColor(0x333333, 1.0);\n        renderer.setSize(CScreen.WIDTH, CScreen.HEIGHT);\n        //renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.shadowMap.enabled = true;\n        console.log(\"Finished setting up Renderer...\");\n    }\n\n    // Setup main camera for the scene\n    function setupCamera(): void {\n        camera = new PerspectiveCamera(35, config.Screen.RATIO, 0.1, 100);\n        camera.position.x = 15.3;\n        camera.position.y = 18.5;\n        camera.position.z = -28.7;\n        camera.rotation.set(-1.10305, 0.49742, -0.1396);\n        camera.lookAt(new Vector3(0, 0, 0));\n        console.log(\"Finished setting up Camera...\");\n    }\n    \n    // Resize function\n    function onResize(): void {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n\n    window.onload = init;\n\n    return {\n        scene: scene\n    }\n\n})();\n\n"],"sourceRoot":"/source/"}